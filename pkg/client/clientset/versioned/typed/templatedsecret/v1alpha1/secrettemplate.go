// Based on work by Carvel - that work Copyright 2024 The Carvel Authors.
// Re-organized by starstreak.dev - that work Copyright 2025 starstreak.dev
// SPDX-License-Identifier: Apache-2.0

// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	context "context"

	templatedsecretv1alpha1 "github.com/drae/templatedsecret-controller/pkg/apis/templatedsecret/v1alpha1"
	scheme "github.com/drae/templatedsecret-controller/pkg/client/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// SecretTemplatesGetter has a method to return a SecretTemplateInterface.
// A group's client should implement this interface.
type SecretTemplatesGetter interface {
	SecretTemplates(namespace string) SecretTemplateInterface
}

// SecretTemplateInterface has methods to work with SecretTemplate resources.
type SecretTemplateInterface interface {
	Create(ctx context.Context, secretTemplate *templatedsecretv1alpha1.SecretTemplate, opts v1.CreateOptions) (*templatedsecretv1alpha1.SecretTemplate, error)
	Update(ctx context.Context, secretTemplate *templatedsecretv1alpha1.SecretTemplate, opts v1.UpdateOptions) (*templatedsecretv1alpha1.SecretTemplate, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, secretTemplate *templatedsecretv1alpha1.SecretTemplate, opts v1.UpdateOptions) (*templatedsecretv1alpha1.SecretTemplate, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*templatedsecretv1alpha1.SecretTemplate, error)
	List(ctx context.Context, opts v1.ListOptions) (*templatedsecretv1alpha1.SecretTemplateList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *templatedsecretv1alpha1.SecretTemplate, err error)
	SecretTemplateExpansion
}

// secretTemplates implements SecretTemplateInterface
type secretTemplates struct {
	*gentype.ClientWithList[*templatedsecretv1alpha1.SecretTemplate, *templatedsecretv1alpha1.SecretTemplateList]
}

// newSecretTemplates returns a SecretTemplates
func newSecretTemplates(c *SecretgenV1alpha1Client, namespace string) *secretTemplates {
	return &secretTemplates{
		gentype.NewClientWithList[*templatedsecretv1alpha1.SecretTemplate, *templatedsecretv1alpha1.SecretTemplateList](
			"secrettemplates",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *templatedsecretv1alpha1.SecretTemplate { return &templatedsecretv1alpha1.SecretTemplate{} },
			func() *templatedsecretv1alpha1.SecretTemplateList {
				return &templatedsecretv1alpha1.SecretTemplateList{}
			},
		),
	}
}
