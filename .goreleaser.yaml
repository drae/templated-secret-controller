version: 2
dist: build

project_name: templated-secret-controller

before:
  hooks:
    - go mod tidy
    - go mod vendor
    - go test ./pkg/... -test.v

builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
    goarch:
      - amd64
      - arm64
    goarm:
      - "6"
      - "7"
    flags:
      - -v
    ldflags:
      - -s
      - -w
      - -X github.com/{{.Env.REPOSITORY_OWNER}}/{{.Env.REPOSITORY_NAME}}/cmd/controller.Version={{.Version}}
      - -X github.com/{{.Env.REPOSITORY_OWNER}}/{{.Env.REPOSITORY_NAME}}/cmd/controller.Commit={{.Commit}}
    main: ./cmd/controller/main.go

dockers:
  # AMD64 Docker build
  - image_templates:
      - "ghcr.io/{{.Env.REPOSITORY_OWNER}}/{{.Env.REPOSITORY_NAME}}:{{ .Version }}-amd64"
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
    extra_files:
      - go.mod
      - go.sum
      - cmd/
      - pkg/
      - vendor/
    goos: linux
    goarch: amd64
    skip_push: auto

  # ARM64 Docker build
  - image_templates:
      - "ghcr.io/{{.Env.REPOSITORY_OWNER}}/{{.Env.REPOSITORY_NAME}}:{{ .Version }}-arm64"
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
    extra_files:
      - go.mod
      - go.sum
      - cmd/
      - pkg/
      - vendor/
    goos: linux
    goarch: arm64
    skip_push: auto

  # ARM v6 (32-bit) Docker build
  - image_templates:
      - "ghcr.io/{{.Env.REPOSITORY_OWNER}}/{{.Env.REPOSITORY_NAME}}:{{ .Version }}-arm"
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
    extra_files:
      - go.mod
      - go.sum
      - cmd/
      - pkg/
      - vendor/
    goos: linux
    goarch: arm
    goarm: 6
    skip_push: auto

  # ARM v7(32-bit) Docker build
  - image_templates:
      - "ghcr.io/{{.Env.REPOSITORY_OWNER}}/{{.Env.REPOSITORY_NAME}}:{{ .Version }}-arm"
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
    extra_files:
      - go.mod
      - go.sum
      - cmd/
      - pkg/
      - vendor/
    goos: linux
    goarch: arm
    goarm: 7
    skip_push: auto

docker_manifests:
  - name_template: "ghcr.io/{{.Env.REPOSITORY_OWNER}}/{{.Env.REPOSITORY_NAME}}:{{ .Version }}"
    image_templates:
      - "ghcr.io/{{.Env.REPOSITORY_OWNER}}/{{.Env.REPOSITORY_NAME}}:{{ .Version }}-amd64"
      - "ghcr.io/{{.Env.REPOSITORY_OWNER}}/{{.Env.REPOSITORY_NAME}}:{{ .Version }}-arm64"
      - "ghcr.io/{{.Env.REPOSITORY_OWNER}}/{{.Env.REPOSITORY_NAME}}:{{ .Version }}-arm"
  - name_template: "ghcr.io/{{.Env.REPOSITORY_OWNER}}/{{.Env.REPOSITORY_NAME}}:latest"
    image_templates:
      - "ghcr.io/{{.Env.REPOSITORY_OWNER}}/{{.Env.REPOSITORY_NAME}}:{{ .Version }}-amd64"
      - "ghcr.io/{{.Env.REPOSITORY_OWNER}}/{{.Env.REPOSITORY_NAME}}:{{ .Version }}-arm64"
      - "ghcr.io/{{.Env.REPOSITORY_OWNER}}/{{.Env.REPOSITORY_NAME}}:{{ .Version }}-arm"

signs:
  - cmd: cosign
    args:
      - sign-blob
      - --yes
      - --output-signature=${signature}
      - ${artifact}
    artifacts: all
    output: true

archives:
  - # Default format is tar.gz for all platforms
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
    files:
      - LICENSE
      - README.md

checksum:
  name_template: "checksums.txt"

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
      - "^ci:"
      - Merge pull request
      - Merge branch

release:
  github:
    owner: "{{.Env.REPOSITORY_OWNER}}"
    name: "{{.Env.REPOSITORY_NAME}}"
