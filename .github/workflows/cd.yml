name: Continuous Deployment

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write # Needed for uploading release artifacts and creating release notes
  packages: write # Needed for container registry
  id-token: write # Needed for keyless cosign signing

jobs:
  goreleaser:
    name: Release with GoReleaser
    runs-on: ubuntu-latest
    env:
      COSIGN_EXPERIMENTAL: "true"
      REPOSITORY_OWNER: ${{ github.repository_owner }}
      REPOSITORY_NAME: ${{ github.event.repository.name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.2"
          cache: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.8.1

      - name: Clean build artifacts
        run: |
          rm -rf build/
          mkdir -p build/

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run GoReleaser
        id: goreleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: release --clean --timeout 60m
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_CURRENT_TAG: ${{ github.ref_name }}

  generate-release-artifacts:
    name: Generate Release Artifacts
    needs: [goreleaser]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Image Reference
        id: image-ref
        run: |
          OWNER="${{ github.repository_owner }}"
          NAME="${{ github.event.repository.name }}"
          TAG="${{ github.ref_name }}"
          echo "image=ghcr.io/${OWNER}/${NAME}:${TAG}" >> $GITHUB_OUTPUT
