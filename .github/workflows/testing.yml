name: Run tests

on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths-ignore:
      - "docs/**"
  push:
    branches:
      - develop
    paths-ignore:
      - "docs/**"
      - "*.md"
  workflow_dispatch:

# Define environment variables to be used across jobs
env:
  IMG: ghcr.io/drae/templated-secret-controller
  TAG: dev

jobs:
  run-tests:
    name: e2e tests on kind
    runs-on: ubuntu-latest
    steps:
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1
        with:
          cluster_name: kinder

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Set the TAG based on git describe if possible
      - name: Set TAG env
        run: |
          echo "TAG=$(git describe --tags --always --dirty 2>/dev/null || echo "dev")" >> $GITHUB_ENV

      - name: Set up go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.1" # Specify exact version instead of using go-version-file

      - name: Check format
        run: make fmt

      - name: Run vet
        run: make vet

      # Set up Docker BuildX with a builder that supports multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver-opts: image=moby/buildkit:buildx-stable-1

      - name: Build controller image
        run: |
          # Build the image and load it into the local docker daemon
          docker buildx build --platform=linux/amd64 \
            --load \
            --build-arg SGCTRL_VER=${TAG} \
            -t ${IMG}:${TAG} .

          # Verify the image exists locally
          docker images ${IMG}:${TAG}

      - name: Load image to Kind
        run: |
          kind load docker-image --name kinder ${IMG}:${TAG}

      - name: Deploy CRDs
        run: |
          make manifests
          kubectl apply -f config/kustomize/base/crds/

      - name: Deploy controller
        run: |
          # Create namespace if it doesn't exist
          kubectl create namespace templated-secret --dry-run=client -o yaml | kubectl apply -f -

          # Use kustomize to build the resources before applying
          kubectl kustomize config/kustomize/base | kubectl apply -f -

          # Update the deployed image to use the one we just built
          kubectl set image -n templated-secret deployment/templated-secret-controller controller=${IMG}:${TAG}

          # Wait for deployment to be ready
          kubectl -n templated-secret wait deployment/templated-secret-controller --for=condition=Available --timeout=60s

      - name: Run tests
        run: |
          mkdir -p tmp
          TEMPLATEDSECRET_E2E_NAMESPACE=templated-secret-dev ./hack/test-e2e.sh
