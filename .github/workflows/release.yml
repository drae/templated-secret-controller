name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write # Needed for uploading release artifacts and creating release notes
  packages: write # Needed for container registry
  id-token: write # Needed for keyless cosign signing

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Run unit tests
        run: ./hack/test.sh

      - name: Build binary
        run: make build

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: controller-binary
          path: bin/controller

  build-and-push-image:
    name: Build and Push Container Image
    needs: build-and-test
    runs-on: ubuntu-latest
    env:
      COSIGN_EXPERIMENTAL: "true"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.8.1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push image
        uses: docker/build-push-action@v5
        id: build-push
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            SGCTRL_VER=${{ github.ref_name }}

      - name: Sign container image
        run: |
          cosign sign --yes "ghcr.io/${{ github.repository }}@${{ steps.build-push.outputs.digest }}"

  generate-release-artifacts:
    name: Generate Release Artifacts
    needs: build-and-push-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v2
        with:
          kustomize-version: "5.2.1"

      - name: Update kustomization with tagged version
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          cd config/kustomize/overlays/prod
          kustomize edit set image controller=ghcr.io/${{ github.repository }}:${TAG}

      - name: Build manifests
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          mkdir -p dist
          kustomize build config/kustomize/overlays/prod > dist/templatedsecret-controller-${TAG}.yaml

      - name: Generate release notes
        id: generate-release-notes
        run: |
          # Get the previous tag to calculate changes since that release
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")

          if [ -n "$PREV_TAG" ]; then
            echo "## Changes since ${PREV_TAG}" > release-notes.md
            echo "" >> release-notes.md
            git log --pretty=format:"* %s" ${PREV_TAG}..HEAD >> release-notes.md
          else
            echo "## Initial release" > release-notes.md
            echo "" >> release-notes.md
            git log --pretty=format:"* %s" >> release-notes.md
          fi

          # Add installation instructions
          echo "" >> release-notes.md
          echo "## Installation" >> release-notes.md
          echo "" >> release-notes.md
          echo "Install the controller with:" >> release-notes.md
          echo '```shell' >> release-notes.md
          echo "kubectl apply -f https://github.com/${{ github.repository }}/releases/download/${GITHUB_REF#refs/tags/}/templatedsecret-controller-${GITHUB_REF#refs/tags/}.yaml" >> release-notes.md
          echo '```' >> release-notes.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/templatedsecret-controller-*.yaml
          body_path: release-notes.md
          draft: false
          prerelease: ${{ contains(github.ref, '-alpha') || contains(github.ref, '-beta') || contains(github.ref, '-rc') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
