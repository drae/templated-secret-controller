name: Continuous Integration
on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths-ignore:
      - "docs/**"
  push:
    branches:
      - main
    paths-ignore:
      - "docs/**"
      - "*.md"
  workflow_dispatch:

env:
  IMG: ghcr.io/drae/templated-secret-controller
  TAG: dev

jobs:
  controller-test:
    name: Controller testing
    runs-on: ubuntu-latest
    steps:
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1
        with:
          cluster_name: kinder

      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set TAG env
        run: echo "TAG=$(git describe --tags --always --dirty 2>/dev/null || echo "dev")" >> $GITHUB_ENV

      - name: Set up go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: Set up Helm
        uses: azure/setup-helm@v3

      - name: Build and Load Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          build-args: |
            SGCTRL_VER=${{ env.TAG }}
          tags: ${{ env.IMG }}:${{ env.TAG }}
          load: true

      - name: Load image to Kind
        run: kind load docker-image --name kinder ${IMG}:${TAG}

      - name: Deploy controller with Helm
        run: |
          kubectl create namespace templated-secret-dev --dry-run=client -o yaml | kubectl apply -f -
          helm install templated-secret-controller charts/templated-secret-controller \
            --set image.repository=${IMG} \
            --set image.tag=${TAG} \
            --set image.pullPolicy=IfNotPresent \
            --namespace templated-secret-dev
          kubectl -n templated-secret-dev wait --for=condition=available \
            deployment -l app.kubernetes.io/name=templated-secret-controller --timeout=60s

      - name: Run controller tests
        uses: n8maninger/action-golang-test@v1
        with:
          package: ./test/ci/
          args: -timeout 60m -v
        env:
          NAMESPACE: templated-secret-dev

  helm-test:
    name: Helm chart test
    runs-on: ubuntu-latest
    needs: controller-test
    steps:
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1
        with:
          cluster_name: kinder

      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set TAG env
        run: echo "TAG=$(git describe --tags --always --dirty 2>/dev/null || echo "dev")" >> $GITHUB_ENV

      - name: Set up go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: Build and Load Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          build-args: |
            SGCTRL_VER=${{ env.TAG }}
          tags: ${{ env.IMG }}:${{ env.TAG }}
          load: true

      - name: Load image to Kind
        run: kind load docker-image --name kinder ${IMG}:${TAG}

      - name: Set up Helm
        uses: azure/setup-helm@v3

      - name: Test Helm chart
        run: |
          # Create namespace and deploy
          kubectl create namespace helm-test --dry-run=client -o yaml | kubectl apply -f -
          helm install test-controller charts/templated-secret-controller \
            --set image.repository=${IMG} \
            --set image.tag=${TAG} \
            --namespace helm-test
          kubectl -n helm-test wait --for=condition=available \
            deployment -l app.kubernetes.io/name=templated-secret-controller --timeout=60s

          # Apply example resources and verify
          kubectl -n helm-test apply -f examples/
          kubectl wait --for=condition=established --timeout=30s crd/secrettemplates.templatedsecret.starstreak.dev

          # Simple check for secret creation
          for i in {1..6}; do
            if kubectl -n helm-test get secrets -l "templatedsecret.starstreak.dev/secrettemplate" 2>/dev/null | grep -q "secret-"; then
              echo "✅ Secrets created successfully"
              break
            fi
            if [ $i -eq 6 ]; then
              echo "❌ Timed out waiting for secrets"
              exit 1
            fi
            sleep 5
          done

          # Test upgrade and uninstall
          helm upgrade test-controller charts/templated-secret-controller \
            --set image.repository=${IMG} \
            --set image.tag=${TAG} \
            --set resources.limits.cpu=200m \
            --namespace helm-test

          helm uninstall test-controller --namespace helm-test
          kubectl get crd secrettemplates.templatedsecret.starstreak.dev
